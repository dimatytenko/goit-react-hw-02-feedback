{"version":3,"sources":["Global.js","theme.js","components/Container/Container.styled.js","components/Container/Container.js","components/Statistics/Statistics.js","components/FeedbackOptions/Feedback.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.styled.js","components/Section/Section.js","components/Notification/Notification.styled.js","components/Notification/Notification.js","App.js","index.js"],"names":["Global","createGlobalStyle","theme","backgrounds","primary","buttonPrimary","AppContainer","styled","div","props","Container","children","Statistics","good","neutral","bad","total","positivePercentage","Math","round","FeedbackBox","FeedbackButton","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","SectionTitle","h2","Section","title","NotificationMessage","p","Notification","message","App","state","handleIncrementFeedback","setState","prevState","this","countTotalFeedback","Object","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEaA,EAASC,YAAH,0eCKJC,EAPD,CACZC,YAAa,CACXC,QAAS,WACTC,cAAe,S,wCCDNC,EAAeC,IAAOC,IAAV,gLAOH,SAAAC,GAAK,OAAIA,EAAMP,MAAMC,YAAYC,W,OCFxCM,I,QAAAA,EAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,cAACL,EAAD,UAAeK,KCYTC,EAdI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBE,KAAKC,MAAMF,GAAnC,aCRKG,EAAcb,IAAOC,IAAV,0BAEXa,EAAiBd,IAAOe,OAAV,+LAIL,SAAAb,GAAK,OAAIA,EAAMP,MAAMC,YAAYE,iBCcxCkB,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAACL,EAAD,UACGI,EAAQE,KAAI,SAAAC,GACX,OACE,cAACN,EAAD,CAEEO,KAAK,SACLC,QAAS,kBAAMJ,EAAgBE,IAHjC,SAKGA,GAJIA,SCTJG,EAAevB,IAAOwB,GAAV,gDCSVC,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOtB,EAAe,EAAfA,SACxB,OACE,qCACGsB,GAAS,cAACH,EAAD,UAAeG,IACxBtB,MCLMuB,EAAsB3B,IAAO4B,EAAV,kDCUjBC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,cAACH,EAAD,UAAsBG,KCEHC,E,4MACnBC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,wBAA0B,SAAAb,GACxB,EAAKc,UAAS,SAAAC,GAAS,sBACpBf,EAASe,EAAUf,GAAU,O,wDAIlC,WACE,MAA+BgB,KAAKJ,MACpC,OADA,EAAQ1B,KAAR,EAAcC,QAAd,EAAuBC,M,6CAIzB,WAEE,OADiB4B,KAAKJ,MAAd1B,KACO8B,KAAKC,qBAAwB,M,oBAG9C,WACE,MAA+BD,KAAKJ,MAA5B1B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAAC,EAAD,WACE,eAAC,EAAD,CAASkB,MAAM,wBAAf,UACG,IACD,cAAC,EAAD,CACET,QAASqB,OAAOC,KAAKH,KAAKJ,OAC1Bd,gBAAiBkB,KAAKH,6BAG1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACiC,IAA9BU,KAAKC,qBACJ,cAAC,EAAD,CAAcP,QAAQ,yBAEtB,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,KAAKC,qBACZ3B,mBAAoB0B,KAAKI,6C,GA3CNC,aCCjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAejD,MAAOA,EAAtB,UACE,cAACF,EAAD,IACA,cAAC,EAAD,SAGJoD,SAASC,eAAe,W","file":"static/js/main.57eccd9e.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const Global = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\nul,\nol {\n  margin: 0;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n`;\n","const theme = {\n  backgrounds: {\n    primary: 'lavender',\n    buttonPrimary: 'aqua',\n  },\n};\n\nexport default theme;\n","import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  padding: 20px;\n  background-color: ${props => props.theme.backgrounds.primary};\n`;\n","// import s from './Container.module.scss';\nimport { AppContainer } from './Container.styled';\n\nfunction Container({ children }) {\n  return <AppContainer>{children}</AppContainer>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Positive feedback: {Math.round(positivePercentage)}%</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import styled from 'styled-components';\n\nexport const FeedbackBox = styled.div``;\n\nexport const FeedbackButton = styled.button`\n  padding: 10px 20px;\n  border: none;\n  outline: none;\n  background-color: ${props => props.theme.backgrounds.buttonPrimary};\n  border-radius: 5px;\n\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\n// import style from './Feeedback.module.scss';\n\nimport { FeedbackBox, FeedbackButton } from './Feedback.styled';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <FeedbackBox>\n      {options.map(option => {\n        return (\n          <FeedbackButton\n            key={option}\n            type=\"button\"\n            onClick={() => onLeaveFeedback(option)}\n          >\n            {option}\n          </FeedbackButton>\n        );\n      })}\n    </FeedbackBox>\n  );\n};\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SectionTitle = styled.h2`\n  font-size: 3rem;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      {title && <SectionTitle>{title}</SectionTitle>}\n      {children}\n    </>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const NotificationMessage = styled.p`\n  font-size: 1.2rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationMessage } from './Notification.styled';\n\nconst Notification = ({ message }) => (\n  <NotificationMessage>{message}</NotificationMessage>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Container from 'components/Container';\nimport Statistics from 'components/Statistics';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Section from 'components/Section';\nimport Notification from 'components/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrementFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    return (good / this.countTotalFeedback()) * 100;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          {' '}\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleIncrementFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\n// import './styles/base.scss';\nimport { Global } from './Global';\nimport theme from './theme';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Global />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}